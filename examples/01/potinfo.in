

# Number of elements:
nelem = 1


# Element names:
elem(1) = Fe


# Optional:
atomtype(Fe) = 1


# Masses
mass( Fe ) = 51.9961


# Reference lattices:
# (none)


# Interaction types:
iac( Fe, Fe ) = ABOP


# Fit this interaction? The interaction must be analytical.
fit( Fe, Fe  ) = yes



# Parameters for fixed interactions
# (none)


# Repulsive cores:

use_rep_core( Fe, Fe ) = yes
bfermi( Fe, Fe ) = 12
rfermi( Fe, Fe ) = 1.7


# Parameters for fittable interactions

     potpar(Fe, Fe ):D0 = 1.5
min: potpar( Fe, Fe ):D0 =   1.0
max: potpar( Fe, Fe ):D0 =  10.0

     potpar(Fe, Fe ):r0 = 2.29
min: potpar( Fe, Fe ):r0 =  1.0
max: potpar( Fe, Fe ):r0 =  5.0

     potpar(Fe, Fe ):beta = 1.4
min: potpar( Fe, Fe ):beta =  0.1
max: potpar( Fe, Fe ):beta = 10.0

     potpar(Fe, Fe ):S = 2.069
min: potpar( Fe, Fe ):S  =   1.1
max: potpar( Fe, Fe ):S  =  10.0

     potpar(Fe, Fe ):gamma = 0.01158
min: potpar( Fe, Fe ):gamma =   1e5
max: potpar( Fe, Fe ):gamma =   1e5

     potpar(Fe, Fe ):c = 1.2899
min: potpar( Fe, Fe ):c =  100   1e-5
max: potpar( Fe, Fe ):c =  100   1e5

     potpar(Fe, Fe ):d = 0.3413
min: potpar( Fe, Fe ):d  =   1e5
max: potpar( Fe, Fe ):d  =   1e5

     potpar(Fe, Fe ):h = -0.26
min: potpar( Fe, Fe ):h  =  1.0
max: potpar( Fe, Fe ):h  =  1.0

     potpar(Fe, Fe ):R = 3.15
min: potpar( Fe, Fe ):R  = 2.0
max: potpar( Fe, Fe ):R  = 2.0

     potpar(Fe, Fe ):D = 0.20
min: potpar( Fe, Fe ):D  = 1.0
max: potpar( Fe, Fe ):D  = 1.0




# ABOP alpha and omega parameters

################################################################
##
##  NOTE: ABOP alpha's are 0 **BY DEFAULT**.
##
##  NOTE: ABOP omega's are 1.0 and independent **BY DEFAULT**.
##
##  We use 'rule' to specify a set of omega parameters to be dependent
##  parameters.
##
################################################################

#
# RULES
#
# Uncomment appropriate versions of following rules (and/or make similar ones)
# to make omega_ijk's be **dependent** parameters (will then depend on alpha_ijk):
# rule : abop_omega(Fe, Fe, Fe) : use_Brenner_form
# rule : abop_omega(Fe, Fe, C) : use_Brenner_form
# rule : abop_omega(Fe, C,  C) : use_Brenner_form
# ...


# Fixed:
# (none)


# Fittable:

     abop_alpha( Fe, Fe, Fe ) =  3.0
min: abop_alpha( Fe, Fe, Fe ) =    1.0
max: abop_alpha( Fe, Fe, Fe ) =  100.0



     abop_omega( Fe, Fe, Fe ) =  2.0
min: abop_omega( Fe, Fe, Fe ) =    1.0
max: abop_omega( Fe, Fe, Fe ) =  100.0

