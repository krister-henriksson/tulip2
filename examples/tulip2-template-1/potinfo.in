

# Number of elements:
nelem = 1


# Element names:
elem(1) = Cr


# Optional:
atomtype(Cr) = 1


# Masses
mass( Cr ) = 51.9961


# Reference lattices:
# (none)


# Interaction types:
iac( Cr, Cr ) = ABOP


# Fit this interaction? The interaction must be analytical.
fit( Cr, Cr  ) = yes



# Parameters for fixed interactions
# (none)


# Parameters for fittable interactions

     potpar(Cr, Cr ):D0 = 4.04222081
min: potpar( Cr, Cr ):D0 =  0.1   0.0
max: potpar( Cr, Cr ):D0 =  1e5 10.0

     potpar(Cr, Cr ):r0 = 2.13018547
min: potpar( Cr, Cr ):r0 =  1  0.0
max: potpar( Cr, Cr ):r0 =  1e5  5.0

     potpar(Cr, Cr ):beta = 1.62158721
min: potpar( Cr, Cr ):beta =   1 0.0
max: potpar( Cr, Cr ):beta =   1e5 10.0

     potpar(Cr, Cr ):S = 3.36793914
min: potpar( Cr, Cr ):S  =  1.1   0.0
max: potpar( Cr, Cr ):S  =  1e5  10.0

     potpar(Cr, Cr ):gamma = 0.02388562
min: potpar( Cr, Cr ):gamma =   1e-5
max: potpar( Cr, Cr ):gamma =   1e5

     potpar(Cr, Cr ):c = 1.03288255
min: potpar( Cr, Cr ):c =  -1e5
max: potpar( Cr, Cr ):c =   1e5

     potpar(Cr, Cr ):d = 0.13813230
min: potpar( Cr, Cr ):d  =  -1e5
max: potpar( Cr, Cr ):d  =   1e5

     potpar(Cr, Cr ):h = -0.28569237
min: potpar( Cr, Cr ):h  =  1.0
max: potpar( Cr, Cr ):h  =  1.0

     potpar(Cr, Cr ):R = 3.2
min: potpar( Cr, Cr ):R  = 2.0
max: potpar( Cr, Cr ):R  = 2.0

     potpar(Cr, Cr ):D = 0.20
min: potpar( Cr, Cr ):D  = 1.0
max: potpar( Cr, Cr ):D  = 1.0




# ABOP alpha and omega parameters

################################################################
##
##  NOTE: ABOP alpha's are 0 **BY DEFAULT**.
##
##  NOTE: ABOP omega's are 1.0 and independent **BY DEFAULT**.
##
##  We use 'rule' to specify a set of omega parameters to be dependent
##  parameters.
##
################################################################

#
# RULES
#
# Uncomment appropriate versions of following rules (and/or make similar ones)
# to make omega_ijk's be **dependent** parameters (will then depend on alpha_ijk):
# rule : abop_omega(Fe, Fe, Fe) : use_Brenner_form
# rule : abop_omega(Fe, Fe, C) : use_Brenner_form
# rule : abop_omega(Fe, C,  C) : use_Brenner_form
# ...


# Fixed:
# (none)


# Fittable:

     abop_alpha( Cr, Cr, Cr ) = 0
min: abop_alpha( Cr, Cr, Cr ) =  100.0
max: abop_alpha( Cr, Cr, Cr ) =  100.0



     abop_omega( Cr, Cr, Cr ) = 1.0
min: abop_omega( Cr, Cr, Cr ) =  100.0
max: abop_omega( Cr, Cr, Cr ) =  100.0

